// docs/.vuepress/config.ts
import { defineConfig4CustomTheme } from "vuepress/config";

// docs/.vuepress/config/nav.ts
var nav_default = [
  {
    text: "\u{1F30F} \u9996\u9875",
    link: "/"
  },
  {
    text: "\u2615\uFE0F \u524D\u7AEF\u7B14\u8BB0",
    link: "/front-end/",
    items: [
      { text: "\u{1F5FA} \u524D\u7AEF\u5B66\u4E60\u8DEF\u7EBF", link: "/front-end/roadmap/" },
      {
        text: "\u5206\u7C7B",
        items: [
          { text: "\u{1F6B6} \u524D\u7AEF\u5165\u95E8\u57FA\u7840", link: "/front-end/beginning/" },
          { text: "\u{1F6B6}\u{1F3FB} \u524D\u7AEF\u5DE9\u56FA\u57FA\u7840", link: "/front-end/stable/" },
          { text: "\u{1F3C3} \u524D\u7AEF\u6838\u5FC3\u6846\u67B6", link: "/front-end/core-frame/" }
        ]
      }
    ]
  },
  {
    text: "\u{1F516} \u5173\u4E8E",
    link: "/about/",
    items: [
      {
        text: "\u{1F68F}\u7D22\u5F15",
        link: "/archives/",
        items: [
          { text: "\u{1F5C4}\u5F52\u6863", link: "/archives/" },
          { text: "\u{1F516}\u6807\u7B7E", link: "/tags/" }
        ]
      }
    ]
  }
];

// docs/.vuepress/config/themeVdoingConfig.ts
var themeVdoingConfig_default = {
  nav: nav_default,
  sidebarDepth: 2,
  logo: "/assets/img/logo.png",
  repo: "simon1uo/notebook",
  searchMaxSuggestions: 10,
  lastUpdated: "\u{1F4E2} \u4E0A\u6B21\u66F4\u65B0",
  docsDir: "docs",
  editLinks: true,
  editLinkText: "\u7F16\u8F91",
  category: true,
  tag: true,
  archive: true,
  titleBadge: false,
  sidebarOpen: false,
  sidebar: { mode: "structuring", collapsable: true },
  updateBar: {
    showToArticle: false,
    moreArticle: "/archives"
  },
  author: {
    name: "Simon Luo",
    link: "https://github.com/simon1uo"
  },
  footer: {
    createYear: 2020,
    copyrightInfo: "<br> Simon Luo Wrote with \u{1F499} <br>"
  }
};

// docs/.vuepress/config/markdown.ts
var markdown_default = {
  lineNumbers: true,
  plugins: [
    "markdown-it-sub",
    "markdown-it-sup",
    "markdown-it-footnote",
    "markdown-it-task-lists",
    "markdown-it-attrs",
    "markdown-it-imsize",
    "markdown-it-mathjax3",
    "markdown-it-abbr",
    "markdown-it-ins",
    "markdown-it-multimd-table-ext"
  ],
  extendMarkdown: (md) => {
    md.set({ breaks: true });
  },
  extractHeaders: ["h2", "h3", "h4", "h5", "h6"]
};

// docs/.vuepress/config/plugins.ts
import dayjs from "dayjs";
var plugins_default = [
  ["pangu"],
  [
    "one-click-copy",
    {
      copySelector: [
        'div[class*="language-"] pre',
        'div[class*="aside-code"] aside'
      ],
      copyMessage: "\u590D\u5236\u6210\u529F",
      duration: 1e3,
      showInMobile: false
    }
  ],
  [
    "zooming",
    {
      selector: ".theme-vdoing-content img:not(.no-zoom)",
      options: {
        bgColor: "rgba(0,0,0,0.6)"
      }
    }
  ],
  ["fulltext-search"],
  [
    "demo-block",
    {
      settings: {
        vue: "https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",
        jsfiddle: true,
        codepen: true,
        horizontal: false
      }
    }
  ],
  [
    "@vuepress/last-updated",
    {
      transformer: (timestamp, lang) => {
        return dayjs(timestamp).format("YYYY/MM/DD, HH:mm:ss");
      }
    }
  ],
  ["@vuepress/nprogress"]
];

// docs/.vuepress/config/head.ts
var head_default = [
  ["link", { rel: "icon", href: "/favicon.ico" }],
  [
    "meta",
    {
      name: "viewport",
      content: "width=device-width,initial-scale=1,user-scalable=no"
    }
  ],
  [
    "meta",
    {
      name: "keywords",
      content: "\u4E2A\u4EBA\u5B66\u4E60\u7B14\u8BB0,\u524D\u7AEF\u5B66\u4E60\u7B14\u8BB0,\u524D\u7AEF\u5B66\u4E60,\u524D\u7AEF\u5B66\u4E60\u8D44\u6E90,\u524D\u7AEF\u5B66\u4E60\u8DEF\u7EBF,HTML,CSS,JavaScript,Vue,React"
    }
  ],
  ["meta", { name: "theme-color", content: "#204A7A" }],
  [
    "link",
    {
      rel: "stylesheet",
      href: "//at.alicdn.com/t/font_3114978_qe0b39no76.css"
    }
  ]
];

// docs/.vuepress/config.ts
import { resolve } from "path";
var config_default = defineConfig4CustomTheme({
  theme: resolve("/Users/Simon/Project/vuepress-notebook/docs/.vuepress", "../../vdoing"),
  title: "notebook",
  description: "a frontend notebook by Simon",
  dest: "dist",
  base: "/notebook/",
  shouldPrefetch: () => false,
  head: head_default,
  themeConfig: themeVdoingConfig_default,
  markdown: markdown_default,
  plugins: plugins_default,
  extraWatchFiles: [".vuepress/config.ts"]
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
