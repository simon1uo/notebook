(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{384:function(t,s,a){"use strict";a.r(s);var e=a(3),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("运算符也称为操作符，对一个或多个值进行运算或者操作。")]),t._v(" "),s("h3",{attrs:{id:"算术运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("例子")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("x 结果")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("y 结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("加法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y+2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("减法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y-2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("乘法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y*2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("除法")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y/2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("2.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("%")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("取模")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y%2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("**")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("求幂")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y**2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("25")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("++")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("自增")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("x=++y")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("6")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("6")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y++")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("6")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("--")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("自减")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("x=--y")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("4")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("4")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y--")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("4")])])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("特殊的二元运算：除了加法以外，对非  "),s("code",[t._v("Number")]),t._v("  类型的值进行运算时，都会先转换为  "),s("code",[t._v("Number")]),t._v("  然后在做运算。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("对于加法运算时，如果是两个字符串进行相加，则会做"),s("strong",[t._v("拼串操作")]),t._v("，将两个字符连接为一个字符串。任何值和字符串做加法，都会先转换为字符串，然后再拼串。"),s("strong",[t._v("二元  "),s("code",[t._v("+")]),t._v("  是唯一一个以这种方式支持字符串的运算符。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ny "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '55'")]),t._v("\nz "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'hello5'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特别地，")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '41'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("注意：自增 / 自减只能应用于变量。试一下，将其应用于数值（比如  "),s("code",[t._v("5++")]),t._v(" ）则会报错。")])]),t._v(" "),s("li",[s("p",[t._v("运算符  "),s("code",[t._v("++")]),t._v("  和  "),s("code",[t._v("--")]),t._v("  可以置于变量前，也可以置于变量后。")]),t._v(" "),s("ul",[s("li",[t._v("当运算符置于变量后，被称为「后置形式」： "),s("code",[t._v("counter++")]),t._v(" 。")]),t._v(" "),s("li",[t._v("当运算符置于变量前，被称为「前置形式」： "),s("code",[t._v("++counter")]),t._v(" 。")])]),t._v(" "),s("blockquote",[s("p",[t._v("所有的运算符都有返回值。自增 / 自减也不例外。前置形式返回一个新的值，但后置返回原来的值（做加法 / 减法之前的值）。")]),t._v(" "),s("ul",[s("li",[t._v("前置形式：对  "),s("code",[t._v("counter")]),t._v("  做自增运算，返回的是新的值  "),s("code",[t._v("2")]),t._v(" 。因此  "),s("code",[t._v("alert")]),t._v("  显示的是  "),s("code",[t._v("2")]),t._v(" 。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (*)")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("后置形式：它同样对  "),s("code",[t._v("counter")]),t._v("  做加法，但是返回的是 "),s("strong",[t._v("旧值")]),t._v("（做加法之前的值）。因此  "),s("code",[t._v("alert")]),t._v("  显示的是  "),s("code",[t._v("1")]),t._v(" 。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("但是如果自增 / 自减的值不会被使用，那么两者形式没有区别：")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("对变量进行自增操作，"),s("strong",[t._v("并且")]),t._v(" 需要立刻使用自增后的值，那么我们需要使用前置形式：  "),s("code",[t._v("alert(++counter); // 1")]),t._v("  ；想要将一个数加一，但是想使用其自增之前的值，那么需要使用后置形式：  "),s("code",[t._v("alert( counter++ ); // 0")]),t._v(" 。")])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("自增 / 自减和其它运算符的对比")]),t._v("： "),s("code",[t._v("++/--")]),t._v("  运算符同样可以在表达式内部使用。"),s("strong",[t._v("它们的优先级比绝大部分的算数运算符要高")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("counter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("blockquote",[s("p",[t._v("上述列子降低了代码的可读性，并不推荐。还是建议依照「"),s("strong",[t._v("一行一个行为")]),t._v("」的原则。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncounter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])])])]),t._v(" "),s("h3",{attrs:{id:"一元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一元运算符"}},[t._v("#")]),t._v(" 一元运算符")]),t._v(" "),s("p",[t._v("表示运算时操作数只要一个：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("+")]),t._v("  正号，"),s("strong",[t._v("不会对数字值产生任何影响")]),t._v("，但是可以 ** 将一个非数字转换为数字：** 它的效果和  "),s("code",[t._v("Number(...)")]),t._v("  相同，但是更加简短。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("blockquote",[s("p",[t._v("经常会有将字符串转化为数字的需求。比如，如果我们正在从 HTML 表单中取值，通常得到的都是字符串。如果我们想对它们求和：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" apples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oranges "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在二元运算符加号起作用之前，所有的值都被转化为了数字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("apples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("oranges "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更长的写法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// alert( Number(apples) + Number(oranges) ); // 5")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("blockquote",[s("p",[t._v("也可以从上面例子看出，"),s("strong",[t._v("一元运算符先于二元运算符作用于运算元")]),t._v("。")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("-")]),t._v("  符号，对一个数字进行符号位取反：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("对字符串运用会得到结果  "),s("code",[t._v("NaN")]),t._v(" ；")])])]),t._v(" "),s("h3",{attrs:{id:"运算符优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符优先级"}},[t._v("#")]),t._v(" 运算符优先级")]),t._v(" "),s("p",[t._v("在 JavaScript 中有众多运算符。每个运算符都有对应的优先级数字。** 数字越大，越先执行。** 如果优先级相同，则按照由左至右的顺序执行。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence",target:"_blank",rel:"noopener noreferrer"}},[t._v("运算符优先级表"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"逻辑运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zh.javascript.info/logical-operators",target:"_blank",rel:"noopener noreferrer"}},[t._v("逻辑运算符 (javascript.info)"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("逻辑运算符用于测定"),s("strong",[t._v("变量或值之间的逻辑")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("运算符")]),t._v(" "),s("th",[t._v("描述")]),t._v(" "),s("th",[t._v("例子")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("&&")]),t._v(" "),s("td",[t._v("and 所有为真才为真")]),t._v(" "),s("td",[t._v("(x < 10 && y> 1) 为 true")])]),t._v(" "),s("tr",[s("td",[t._v("||")]),t._v(" "),s("td",[t._v("or 有一个为真即为真")]),t._v(" "),s("td",[t._v("(x==5 || y==5) 为 false")])]),t._v(" "),s("tr",[s("td",[t._v("!")]),t._v(" "),s("td",[t._v("not")]),t._v(" "),s("td",[t._v("!(x==y) 为 true")])])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("或  "),s("code",[t._v("||")]),t._v("  运算符的应用：大多数情况下，逻辑或  "),s("code",[t._v("||")]),t._v("  会被用在  "),s("code",[t._v("if")]),t._v("  语句中，用来测试是否有 "),s("strong",[t._v("任何")]),t._v(" 给定的条件为  "),s("code",[t._v("true")]),t._v(" 。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hour "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hour "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" hour "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'The office is closed.'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("或运算寻找第一个真值")]),t._v("：一个或运算  "),s("code",[t._v("||")]),t._v("  的链，将返回第一个真值，如果不存在真值，就返回该链的最后一个值。")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("获取变量列表或者表达式中的第一个真值。")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nickName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SuperCoder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" nickName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Anonymous"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SuperCoder")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("短路求值")]),t._v("： "),s("code",[t._v("||")]),t._v("  对其参数进行处理，直到达到第一个真值，然后立即返回该值，而无需处理其他参数。如果操作数不仅仅是一个值，而是一个有副作用的表达式，例如变量赋值或函数调用，那么这一特性的重要性就变得显而易见了。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"not printed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// alert没有被运行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"printed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("与运算寻找第一个假值")]),t._v("：与和或运算很像。区别就是与运算返回第一个假值，而或运算返回第一个真值。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果第一个操作数是真值，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与运算返回第二个操作数：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果第一个操作数是假值，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与运算将直接返回它。第二个操作数会被忽略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no matter what"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("如果所有的值都是真值，最后一个值将会被返回：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3，最后一个值")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("与运算  "),s("code",[t._v("&&")]),t._v("  在或运算  "),s("code",[t._v("||")]),t._v("  之前进行")]),t._v("：与运算  "),s("code",[t._v("&&")]),t._v("  的优先级比或运算  "),s("code",[t._v("||")]),t._v("  要高。所以代码  "),s("code",[t._v("a && b || c && d")]),t._v("  跟  "),s("code",[t._v("&&")]),t._v("  表达式加了括号完全一样： "),s("code",[t._v("(a && b) || (c && d)")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("使用非运算  "),s("code",[t._v("!!")]),t._v("  有时候用来将某个值转化为布尔类型：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"non-empty string"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])]),t._v(" "),s("h4",{attrs:{id:"空值合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空值合并"}},[t._v("#")]),t._v(" "),s("code",[t._v("??")]),t._v("  空值合并")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("a ?? b")]),t._v("  的结果是：")]),t._v(" "),s("ul",[s("li",[t._v("如果  "),s("code",[t._v("a")]),t._v("  是已定义的，则结果为  "),s("code",[t._v("a")]),t._v(" ，")]),t._v(" "),s("li",[t._v("如果  "),s("code",[t._v("a")]),t._v("  不是已定义的，则结果为  "),s("code",[t._v("b")]),t._v(" 。")])])]),t._v(" "),s("p",[t._v("如果第一个参数不是  "),s("code",[t._v("null/undefined")]),t._v(" ，则  "),s("code",[t._v("??")]),t._v("  返回第一个参数。否则，返回第二个参数。")]),t._v(" "),s("p",[t._v("应用场景：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("提供默认值：如果  "),s("code",[t._v("user")]),t._v("  的值不为  "),s("code",[t._v("null/undefined")]),t._v("  则显示  "),s("code",[t._v("user")]),t._v(" ，否则显示  "),s("code",[t._v("匿名")]),t._v(" ：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"匿名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"匿名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("选择出第一个非  "),s("code",[t._v("null/undefined")]),t._v("  的值。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nickName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Supercoder"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示第一个已定义的值：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("firstName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" lastName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" nickName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("??")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"匿名"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Supercoder")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("??")]),t._v("  与  "),s("code",[t._v("||")]),t._v("  比较：")]),t._v(" "),s("ul",[s("li",[t._v("或运算符  "),s("code",[t._v("||")]),t._v("  可以以与  "),s("code",[t._v("??")]),t._v("  运算符相同的方式使用。（ "),s("code",[t._v('alert(firstName || lastName || nickName || "Anonymous");')]),t._v("  同理）")]),t._v(" "),s("li",[t._v("但是，或  "),s("code",[t._v("||")]),t._v("  运算符先于  "),s("code",[t._v("??")]),t._v("  出现，它自 JavaScript 诞生就存在。空值合并运算符  "),s("code",[t._v("??")]),t._v("  是最近才被添加到 JavaScript 中的。")]),t._v(" "),s("li",[s("code",[t._v("||")]),t._v("  返回第一个 "),s("strong",[t._v("真")]),t._v(" 值。 "),s("code",[t._v("??")]),t._v("  返回第一个 "),s("strong",[t._v("已定义的")]),t._v(" 值。\n"),s("ul",[s("li",[s("code",[t._v("||")]),t._v("  无法区分  "),s("code",[t._v("false")]),t._v(" 、 "),s("code",[t._v("0")]),t._v(" 、空字符串  "),s("code",[t._v('""')]),t._v("  和  "),s("code",[t._v("null/undefined")]),t._v(" 。它们都一样 —— 假值（falsy values）。如果其中任何一个是  "),s("code",[t._v("||")]),t._v("  的第一个参数，那么我们将得到第二个参数作为结果。")])])]),t._v(" "),s("li",[t._v("优先级： "),s("code",[t._v("??")]),t._v("  运算符的优先级与  "),s("code",[t._v("||")]),t._v("  相同。空值合并运算符在  "),s("code",[t._v("=")]),t._v("  和  "),s("code",[t._v("?")]),t._v("  运算前计算，但在大多数其他运算（例如  "),s("code",[t._v("+")]),t._v("  和  "),s("code",[t._v("*")]),t._v(" ）之后计算。")]),t._v(" "),s("li",[t._v("不能将  "),s("code",[t._v("??")]),t._v("  与  "),s("code",[t._v("||")]),t._v("  或  "),s("code",[t._v("&&")]),t._v("   一起使用，JavaSript 会触发语法错误。"),s("strong",[t._v("除非使用括号明确指定了优先级")]),t._v("。")])])]),t._v(" "),s("h3",{attrs:{id:"赋值运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),s("p",[t._v("若 x=10 和 y=5：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("例子")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("等同于")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("运算结果")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}}),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("+=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x+=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=x+y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=15")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("-=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x-=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=x-y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("*=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x*=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=x*y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=50")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("/=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x/=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=x/y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("%=")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x%=y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=x%y")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("x=0")])])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("链式赋值：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a = 4, b = 4, c = 4")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("最好写为可读性更强的：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])]),t._v(" "),s("h3",{attrs:{id:"关系运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符"}},[t._v("#")]),t._v(" 关系运算符")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zh.javascript.info/comparison",target:"_blank",rel:"noopener noreferrer"}},[t._v("值的比较 (javascript.info)"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("比较值之间的关系：")]),t._v(" "),s("ul",[s("li",[t._v("如果关系成立则返回  "),s("code",[t._v("true")]),t._v(" ，关系不成立则返回 "),s("code",[t._v("false")]),t._v(" 。")]),t._v(" "),s("li",[t._v("如果比较的两个值是非数值，会将其转换为  "),s("code",[t._v("Number")]),t._v("  然后再比较。")]),t._v(" "),s("li",[t._v("如果比较的两个值都是字符串，此时会比较字符串的 Unicode 编码，而不会转换为  "),s("code",[t._v("Number")]),t._v(" 。")])]),t._v(" "),s("table",{staticClass:"reference"},[s("tbody",[s("tr",[s("th",{attrs:{width:"15%",align:"left"}},[t._v("运算符")]),t._v(" "),s("th",{attrs:{width:"40%",align:"left"}},[t._v("描述")]),t._v(" "),s("th",{attrs:{width:"18%",align:"left"}},[t._v("比较")]),t._v(" "),s("th",{attrs:{width:"17%",align:"left"}},[t._v("返回值")])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v("==")]),t._v(" "),s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v("等于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x==8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("false")])])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top"}},[t._v("x==5")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])]),t._v(" "),s("tr",{staticClass:"fixzebra"},[s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v("===")]),t._v(" "),s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v("绝对等于（值和类型均相等）")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v('x==="5"')]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("false")])])]),t._v(" "),s("tr",{staticClass:"fixzebra"},[s("td",{attrs:{valign:"top"}},[t._v("x===5")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top"}},[t._v("!=")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v(" 不等于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x!=8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v("!==")]),t._v(" "),s("td",{attrs:{valign:"top",rowspan:"2"}},[t._v(" 不绝对等于（值和类型有一个不相等，或两个都不相等）")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v('x!=="5"')]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])]),t._v(" "),s("tr",{staticClass:"fixzebra"},[s("td",{attrs:{valign:"top"}},[t._v("x!==5")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("false")])])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top"}},[t._v(">")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v(" 大于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x>8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("false")])])]),t._v(" "),s("tr",{staticClass:"fixzebra"},[s("td",{attrs:{valign:"top"}},[t._v("<")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v(" 小于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x<8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])]),t._v(" "),s("tr",[s("td",{attrs:{valign:"top"}},[t._v(">=")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v(" 大于或等于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x>=8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("false")])])]),t._v(" "),s("tr",{staticClass:"fixzebra"},[s("td",{attrs:{valign:"top"}},[t._v("<=")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v(" 小于或等于")]),t._v(" "),s("td",{attrs:{valign:"top"}},[t._v("x<=8")]),t._v(" "),s("td",{attrs:{valign:"top"}},[s("em",[t._v("true")])])])])]),t._v(" "),s("p",[s("strong",[t._v("特殊的值")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NaN")]),t._v("  和  "),s("code",[t._v("Undefined")]),t._v("  ：由于  "),s("code",[t._v("undefined")]),t._v("  衍生自  "),s("code",[t._v("null")]),t._v("  ，所以 "),s("code",[t._v("null == undefined")]),t._v("  会返回  "),s("code",[t._v("true")]),t._v("  。 但是  "),s("code",[t._v("null === undefined")]),t._v("  会返回  "),s("code",[t._v("false")]),t._v("  ；")]),t._v(" "),s("li",[s("code",[t._v("NaN")]),t._v("  和任何数值都不相等，自身  "),s("code",[t._v("NaN == NaN")]),t._v("  为  "),s("code",[t._v("false")]),t._v("  ；")]),t._v(" "),s("li",[t._v("判断一个值是否  "),s("code",[t._v("NaN")]),t._v("  ，使用  "),s("code",[t._v("isNaN()")]),t._v("  函数；")])]),t._v(" "),s("h3",{attrs:{id:"三元运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三元运算符"}},[t._v("#")]),t._v(" 三元运算符")]),t._v(" "),s("p",[t._v("先对条件表达式求值判断，如果判断结果为  "),s("code",[t._v("true")]),t._v("  ，则执行语句 1，并返回执行结果；如果判断结果为  "),s("code",[t._v("false")]),t._v("  ，则执行语句 2，并返回执行结果；")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("条件表达式 ? 语句1 : 语句2;\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"逗号运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逗号运算符"}},[t._v("#")]),t._v(" 逗号运算符")]),t._v(" "),s("p",[t._v("逗号运算符  "),s("code",[t._v(",")]),t._v("  是最少见最不常使用的运算符之一。逗号运算符能让我们处理多个语句，使用  "),s("code",[t._v(",")]),t._v("  将它们分开。** 每个语句都运行了，但是只有最后的语句的结果会被返回。** 例如：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有 3 + 4 运行, 1 + 2 的结果被丢弃")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("逗号运算符的优先级")]),t._v("：逗号运算符的优先级非常低，比  "),s("code",[t._v("=")]),t._v("  还要低，因此上面你的例子中圆括号非常重要。如果没有圆括号： "),s("code",[t._v("a = 1 + 2, 3 + 4")]),t._v("  会先执行  "),s("code",[t._v("+")]),t._v(" ，将数值相加得到  "),s("code",[t._v("a = 3, 7")]),t._v(" ，然后赋值运算符  "),s("code",[t._v("=")]),t._v("  执行  "),s("code",[t._v("a = 3")]),t._v(" ，然后逗号之后的数值  "),s("code",[t._v("7")]),t._v("  不会再执行，它被忽略掉了。相当于  "),s("code",[t._v("(a = 1 + 2), 3 + 4")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);