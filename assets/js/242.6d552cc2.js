(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{569:function(v,e,t){"use strict";t.r(e);var _=t(3),a=Object(_.a)({},(function(){var v=this,e=v._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("在互联网的历史中，网页可以从不同的阶段来说明发展历史：")]),v._v(" "),e("ul",[e("li",[v._v("静态网页 / 石器时代：没有数据库，只展示文字和图片。直到 CGI 技术的出现可以通过 CGI Pearl 与数据库和文件系统交互。")]),v._v(" "),e("li",[v._v("ASP、JSP / 文明时代。2005 年左右，出现微软的 ASP 和 JSP（Java Server Pages） 取代 CGI 技术，增强了 Web 客户端和服务端交互的安全性。缺点是不太灵活，因为 JSP 在服务端执行，通常返回客户端一个 HTML 文本，但是每次请求、获取数据、内容加载都需要服务器返回渲染之后的 DOM ，使得开发网站的灵活性大打折扣。")]),v._v(" "),e("li",[v._v("JQuery、SPA 雏形 / 工业革命时代。随着移动设备普及，Backbone EmberJS AngularJS 这样一批前端框架随之出现。")]),v._v(" "),e("li",[v._v("百花齐放时代。工业时代提出的 "),e("em",[v._v("SPA")]),v._v(" 模型随着 "),e("em",[v._v("NODE")]),v._v(" 的兴起、服务端、各种工具、容器的飞速发展、前端 "),e("em",[v._v("MVC MVVM")]),v._v(" 模式逐渐清晰、前端涌现了相当一批优秀的开源项目。")])]),v._v(" "),e("h2",{attrs:{id:"理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#理解"}},[v._v("#")]),v._v(" 理解")]),v._v(" "),e("p",[v._v("Vue 是一款：")]),v._v(" "),e("ul",[e("li",[v._v("用于构建用户界面的 JavaScript 框架，也可以创建单页面应用（SPA）的 Web 应用框架。")]),v._v(" "),e("li",[v._v("基于标准 HTML 、 CSS 、 JavaScript 标准，提供声明式、组件化的编程模型，高效开发用户界面，旨在更好组织和简化 Web 应用的开发。")]),v._v(" "),e("li",[v._v("Vue 关注的核心是 MVC 模式的是涂层，并且能方便地获取数据更新，通过组件内部特定的方法实现视图与模型的交互。")])]),v._v(" "),e("h2",{attrs:{id:"vue-核心特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue-核心特性"}},[v._v("#")]),v._v(" Vue 核心特性")]),v._v(" "),e("h3",{attrs:{id:"数据驱动-mvvm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据驱动-mvvm"}},[v._v("#")]),v._v(" 数据驱动 MVVM")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("模型层 Model： 负责业务逻辑与服务器端交互。")])]),v._v(" "),e("li",[e("p",[v._v("视图层 View： 负责将数据模型转化为 UI 展示出来。")])]),v._v(" "),e("li",[e("p",[v._v("视图模型层 ViewModel ：用来连接 Model 和 View。")])])]),v._v(" "),e("h3",{attrs:{id:"组件化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件化"}},[v._v("#")]),v._v(" 组件化")]),v._v(" "),e("ul",[e("li",[v._v("组件化就是把图形、非图形的各种逻辑均抽象为一个统一的概念（组件）来实现开发的模型，在 Vue 中每个  "),e("code",[v._v(".vue")]),v._v("  文件中都可以视为一个组件。")]),v._v(" "),e("li",[v._v("组件化的优势：\n"),e("ul",[e("li",[v._v("降低整个系统的耦合度，在保持接口不变的情况下，可以替换不同的组件完成需求。例如输入框可以替换为日历、事件、范围等。")]),v._v(" "),e("li",[v._v("调试方便，由于整个系统都是通过组件组合起来的，在出现问题的时候可以排除法直接移除组件或者根据报错的组件快速定位问题，因为组件之间低耦合，职责单一。")]),v._v(" "),e("li",[v._v("可维护性高。由于每个组件职责单一，并且组件在系统中是被复用的，所以对待吗进行优化可以获得系统的整体升级。")])])])]),v._v(" "),e("h3",{attrs:{id:"指令系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令系统"}},[v._v("#")]),v._v(" 指令系统")]),v._v(" "),e("p",[v._v("指令是指带有  "),e("code",[v._v("v-")]),v._v("  前缀的特殊属性。")]),v._v(" "),e("ul",[e("li",[v._v("作用：当表达式的值发生改变时，将其产生的连带影响，响应式地作用于 DOM。")]),v._v(" "),e("li",[v._v("常用的指令：\n"),e("ul",[e("li",[v._v("条件渲染指令")]),v._v(" "),e("li",[v._v("列表渲染指令")]),v._v(" "),e("li",[v._v("属性绑定指令")]),v._v(" "),e("li",[v._v("事件绑定指令")]),v._v(" "),e("li",[v._v("双向数据绑定指令")])])])]),v._v(" "),e("h3",{attrs:{id:"跟传统开发的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跟传统开发的区别"}},[v._v("#")]),v._v(" 跟传统开发的区别")]),v._v(" "),e("ul",[e("li",[v._v("Vue 所有的界面事件都是只去操作数据，JQuery 操作 DOM；")]),v._v(" "),e("li",[v._v("Vue 所有的界面变动，都是根据数据自动绑定出来的，JQuery 操作 DOM。")])]),v._v(" "),e("h3",{attrs:{id:"与-react-的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#与-react-的区别"}},[v._v("#")]),v._v(" 与 React 的区别")]),v._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://segmentfault.com/a/1190000016269636",target:"_blank",rel:"noopener noreferrer"}},[v._v("《从零构建前后分离 web 项目》：开篇 - 纵观 WEB 历史演变 - SegmentFault 思否"),e("OutboundLink")],1)]),v._v(" "),e("li",[e("a",{attrs:{href:"https://staging-cn.vuejs.org/guide/introduction.html",target:"_blank",rel:"noopener noreferrer"}},[v._v("简介 | Vue.js (vuejs.org)"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);