(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{627:function(v,_,e){"use strict";e.r(_);var t=e(29),c=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"计算属性与监视"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性与监视"}},[v._v("#")]),v._v(" 计算属性与监视")]),v._v(" "),e("h3",{attrs:{id:"计算属性-computed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算属性-computed"}},[v._v("#")]),v._v(" 计算属性 computed")]),v._v(" "),e("p",[v._v("Vue 中不推荐使用复杂的表达式，应该重构为「计算属性」或方法；（官网风格指南）")]),v._v(" "),e("p",[v._v("要显示的「"),e("strong",[v._v("属性")]),v._v("」不存在时，要通过「"),e("strong",[v._v("已有属性")]),v._v("（在 Vue 下管理）」计算得到时可以使用计算属性  "),e("code",[v._v("computed")]),v._v("  ：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("原理：底层借助了  "),e("code",[v._v("Objcet.defineProperty()")]),v._v("  方法提供的  "),e("code",[v._v("getter")]),v._v("  和  "),e("code",[v._v("setter")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[e("p",[e("code",[v._v("get")]),v._v("  函数什么时候执行？")]),v._v(" "),e("ul",[e("li",[e("strong",[v._v("初次读取时会执行一次")]),v._v("（将保存在缓存提供重复使用）；")]),v._v(" "),e("li",[e("strong",[v._v("依赖的数据")]),v._v("发生改变时会被再次调用；")])])]),v._v(" "),e("li",[e("p",[v._v("与  "),e("code",[v._v("methods")]),v._v("  实现相比，内部有"),e("strong",[v._v("缓存机制（复用），效率更高，调试方便")]),v._v("。")])])])]),v._v(" "),e("li",[e("p",[v._v("⚠️注意：")]),v._v(" "),e("ul",[e("li",[v._v("最终的计算属性会出现在  "),e("code",[v._v("vm")]),v._v(" ，直接读取使用（会自动调用  "),e("code",[v._v("get")]),v._v("  ）即可；")]),v._v(" "),e("li",[v._v("如果计算属性要被修改，那必须写  "),e("code",[v._v("set")]),v._v("  函数去响应修改，且  "),e("code",[v._v("set")]),v._v("  中要引起计算时依赖的数据发生改变。")])])]),v._v(" "),e("li",[e("p",[v._v("使用方法：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("在  "),e("code",[v._v("computed")]),v._v("  对象中定义计算属性（ "),e("code",[v._v("get()")]),v._v("  和  "),e("code",[v._v("set()")]),v._v("  ）；")])]),v._v(" "),e("li",[e("p",[v._v("在页面中使用  "),e("code",[v._v(v._s(v.方法名))]),v._v("  来显示计算的结果；")])]),v._v(" "),e("li",[e("p",[v._v("只读不改的简写，省略  "),e("code",[v._v("set()")]),v._v("  只有  "),e("code",[v._v("get()")]),v._v("  时，直接当计算属性的  "),e("code",[v._v("get()")]),v._v(" ；")])])])])]),v._v(" "),e("h3",{attrs:{id:"监视属性-watch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监视属性-watch"}},[v._v("#")]),v._v(" 监视属性 watch")]),v._v(" "),e("p",[v._v("（"),e("strong",[v._v("侦听属性")]),v._v("）")]),v._v(" "),e("p",[v._v("当被监视的属性发生变化时，回调函数自动调用进行相关的操作：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("⚠️：监视的「"),e("strong",[v._v("属性")]),v._v("」必须存在才能进行监视；")])]),v._v(" "),e("li",[e("p",[v._v("监视的两种写法：通过在  "),e("code",[v._v("new Vue")]),v._v("  时传入 "),e("code",[v._v("watch")]),v._v("  配置来监视指定的属性或者通过  "),e("code",[v._v("vm")]),v._v("  对象的  "),e("code",[v._v("$watch()")]),v._v("  监视  ；")])]),v._v(" "),e("li",[e("p",[v._v("监视的  "),e("code",[v._v("watch(oldValue, newValue)")]),v._v("  可以通过参数获取变化的值（旧值和新值）；")])]),v._v(" "),e("li",[e("p",[v._v("监视的简写（适用于不需要配置 "),e("code",[v._v("immediate")]),v._v("  等参数）；")])])]),v._v(" "),e("p",[e("strong",[v._v("深度监视")]),v._v("：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Vue 中的  "),e("code",[v._v("watch")]),v._v("  默认不监测对象内部值的改变（一层）；")])]),v._v(" "),e("li",[e("p",[v._v("配置  "),e("code",[v._v("deep: true")]),v._v("  可以监测对象内部值的改变；")])]),v._v(" "),e("li",[e("p",[v._v("⚠️注意：")]),v._v(" "),e("ul",[e("li",[v._v("Vue 自身可以检测对象的内部值改变，但是 Vue 提供的监视属性  "),e("code",[v._v("watch")]),v._v("  默认不可以；")]),v._v(" "),e("li",[v._v("使用  "),e("code",[v._v("watch")]),v._v("  可以根据数据的具体结构，决定是否采用深度监视；")])])])]),v._v(" "),e("h3",{attrs:{id:"使用监视与计算属性对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用监视与计算属性对比"}},[v._v("#")]),v._v(" 使用监视与计算属性对比")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("computed")]),v._v("  能完成时， "),e("code",[v._v("watch")]),v._v("  都能完成：当  "),e("code",[v._v("watch")]),v._v("  和  "),e("code",[v._v("computed")]),v._v("  都能实现时，首选用  "),e("code",[v._v("computed")]),v._v("  提高性能；")]),v._v(" "),e("li",[e("code",[v._v("watch")]),v._v("  能完成的功能， "),e("code",[v._v("computed")]),v._v("  不一定完成：当时需要实现一些异步功能（例如延时显示）时，就使用  "),e("code",[v._v("watch")]),v._v(" （ "),e("code",[v._v("computed")]),v._v("  依靠  "),e("code",[v._v("return")]),v._v("  获取值）")])]),v._v(" "),e("h2",{attrs:{id:"绑定样式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绑定样式"}},[v._v("#")]),v._v(" 绑定样式")]),v._v(" "),e("p",[v._v("在应用界面中，某个（些）元素的样式是会发生变化的。使用  "),e("code",[v._v("class")]),v._v("  /  "),e("code",[v._v("style")]),v._v("  绑定实现"),e("strong",[v._v("动态样式")]),v._v("效果的技术；")]),v._v(" "),e("h3",{attrs:{id:"class-绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#class-绑定"}},[v._v("#")]),v._v(" "),e("code",[v._v("class")]),v._v("  绑定")]),v._v(" "),e("ul",[e("li",[v._v("语法： "),e("code",[v._v(':class="xxx"')]),v._v("  ，有三种写法：\n"),e("ul",[e("li",[e("code",[v._v("xxx")]),v._v("  表达式是字符串  "),e("code",[v._v(":'classA'")]),v._v("  ，适用于类名不确定时；")]),v._v(" "),e("li",[e("code",[v._v("xxx")]),v._v("  表达式是数组： "),e("code",[v._v("['classA','classB']")]),v._v(" ，适用于要绑定多个样式，但是个数不确定、名字不确定；")]),v._v(" "),e("li",[e("code",[v._v("xxx")]),v._v("  表达式是对象：  "),e("code",[v._v(":{classA:isA, classB: isB}")]),v._v(" ，适用于绑定多个样式，个数不确定、名字不确定、是否使用也不确定；")])])])]),v._v(" "),e("h3",{attrs:{id:"style-绑定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#style-绑定"}},[v._v("#")]),v._v(" "),e("code",[v._v("style")]),v._v("  绑定")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("语法：  "),e("code",[v._v(':style="xxx"')]),v._v(" ：")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("xxx")]),v._v("  表达式是样式对象，可动态修改样式属性值，例如 "),e("code",[v._v("{fontSize: 40+‘px’}")]),v._v(" 。")]),v._v(" "),e("li",[e("code",[v._v("xxx")]),v._v("  表达式是数组， "),e("code",[v._v("[a,b]")]),v._v("  其中  "),e("code",[v._v("a,b")]),v._v("  是样式对象；")])])])])])}),[],!1,null,null,null);_.default=c.exports}}]);