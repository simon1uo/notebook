(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{604:function(t,a,s){"use strict";s.r(a);var e=s(29),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"javascript-中存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中存在的问题"}},[t._v("#")]),t._v(" JavaScript 中存在的问题")]),t._v(" "),s("p",[t._v("由于各种历史因素，JavaScript 语言本身存在很多的缺点：")]),t._v(" "),s("ul",[s("li",[t._v("如 ES5 以及之前的使用的 var 关键字关于作用域的问题。")]),t._v(" "),s("li",[t._v("如最初 JavaScript 设计的数组类型并不是连续的内存空间。")]),t._v(" "),s("li",[t._v("直到今天 JavaScript 也没有加入"),s("strong",[t._v("类型检测")]),t._v("。")])]),t._v(" "),s("p",[t._v("但是不可否认，JavaScript 在变得更好。ES6、7、8 等的推出，每次都会让这门语言更加现代、更加安全、更加方便。但是 JavaScript 在类型监测仍然没有进展。")]),t._v(" "),s("h3",{attrs:{id:"类型带来的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型带来的问题"}},[t._v("#")]),t._v(" 类型带来的问题")]),t._v(" "),s("p",[t._v("JavaScript 不能在代码编译期间发现代码的错误。")]),t._v(" "),s("p",[t._v("🌰 例子：")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误调用，但是IDE不报错")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("blockquote",[s("p",[t._v("这个错误很大的原因就是因为 JavaScript 没有对我们传入的参数进行任何的限制，"),s("strong",[t._v("只能等到运行期间才发现这个错误")]),t._v("；并且当这个错误产生时，会影响后续代码的继续执行，也就是整个项目都因为一个小小的错误而深入崩溃。")]),t._v(" "),s("p",[t._v("当然可以通过以给 JavaScript 加上很多限制：要求  "),s("code",[t._v("getLength")]),t._v("  函数中  "),s("code",[t._v("str")]),t._v("  是一个必传的类型，没有调用者没有传编译期间就会报错。要求它的必须是一个  "),s("code",[t._v("String")]),t._v("  类型，传入其他类型就直接报错。那么就可以知道很多的错误问题在编译期间就被发现，而不是等到运行时再去发现和修改。")])]),t._v(" "),s("h3",{attrs:{id:"类型思维的缺失"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型思维的缺失"}},[t._v("#")]),t._v(" 类型思维的缺失")]),t._v(" "),s("p",[t._v("JavaScript 因为从设计之初就没有考虑类型的约束问题，所以造成了前端开发人员关于类型思维的缺失：")]),t._v(" "),s("ul",[s("li",[t._v("不关心变量或者参数是什么类型的，如果在必须确定类型时，我们往往需要使用各种判断验证。")]),t._v(" "),s("li",[t._v("因为没有类型约束，而总是担心自己的代码不安全，不够健壮。")])]),t._v(" "),s("p",[t._v("在大型项目中使用 JavaScript 时，，这种宽松的类型约束会带来非常多 的安全隐患，多人员开发它们之间也没有良好的类型契约：")]),t._v(" "),s("ul",[s("li",[t._v("实现一个核心类库时，如果没有类型约束，那么需要对别人传入的参数进行各种验证来保证代码的健壮性；")]),t._v(" "),s("li",[t._v("如果要调用外部函数，没有对函数进行任何的注释，只能去看里面的逻辑来理解这个函数需要传入什么参数，返回值是什么类型。")])]),t._v(" "),s("h2",{attrs:{id:"typescript-的诞生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-的诞生"}},[t._v("#")]),t._v(" TypeScript 的诞生")]),t._v(" "),s("p",[t._v("为了弥补 JavaScript 类型约束上的缺陷，增加类型约束，很多公司推出了自己的方案： 2014 年，Facebook 推出了 flow 来对 JavaScript 进行类型检查； 同年，微软也推出了 TypeScript 1.0 版本； 他们都致力于为 JavaScript 提供类型检查。")]),t._v(" "),s("ul",[s("li",[t._v("Vue2.x 的时候采用的就是 flow 来做类型检查；")]),t._v(" "),s("li",[t._v("Vue3.x 已经全线转向 TypeScript，98.3% 使用 TypeScript 进行了重构；")]),t._v(" "),s("li",[t._v("Angular 在很早期就使用 TypeScript 进行了项目重构并且需要使用 TypeScript 来进行开发； 而甚至 Facebook 公司一些自己的产品也在使用 TypeScript；")])]),t._v(" "),s("h2",{attrs:{id:"认识-typescript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#认识-typescript"}},[t._v("#")]),t._v(" 认识 TypeScript")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("TypeScript is a superset of JavaScript that compiles to clean JavaScript output.")])]),t._v(" "),s("p",[s("strong",[t._v("TypeScript is a typed superset of JavaScript that compiles to plain JavaScript.")])])]),t._v(" "),s("p",[t._v("TypeScript 是拥有类型的 JavaScript 超集，它可以编译成"),s("strong",[t._v("普通、干净、完整")]),t._v("的 JavaScript 代码。")]),t._v(" "),s("ul",[s("li",[t._v("TypeScript 是加强版的 JavaScript。")]),t._v(" "),s("li",[t._v("JavaScript 所拥有的特性，TypeScript 全部都是支持的，并且它紧随 ECMAScript 的标准，所以 ES6、ES7、ES8 等新语法标准，它都是支持的。")]),t._v(" "),s("li",[t._v("并且在语言层面上，不仅仅增加了类型约束，而且包括一些语法的扩展，比如枚举类型（Enum）、元组类型（Tuple）等。")]),t._v(" "),s("li",[t._v("TypeScript 在实现新特性的同时，总是保持和 ES 标准的同步甚至是领先。")]),t._v(" "),s("li",[t._v("TypeScript 最终会被编译成 JavaScript 代码，所以并不需要担心它的兼容性问题，在编译时也不需要借助于 Babel 这样的工具；")]),t._v(" "),s("li",[t._v("TypeScript 不仅让 JavaScript 更加安全，而且给它带来了诸多好用的好用特性；。")])]),t._v(" "),s("h2",{attrs:{id:"typescript-特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-特点"}},[t._v("#")]),t._v(" TypeScript 特点")]),t._v(" "),s("p",[t._v("官方描述：")]),t._v(" "),s("ul",[s("li",[t._v("始于 JavaScript，归于 JavaScript")]),t._v(" "),s("li",[t._v("TypeScript 是一个强大的工具，用于构建大型项目")]),t._v(" "),s("li",[t._v("拥有先进的 JavaScript 特性。")])]),t._v(" "),s("h2",{attrs:{id:"typescript-的安装与运行环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript-的安装与运行环境"}},[t._v("#")]),t._v(" TypeScript 的安装与运行环境")]),t._v(" "),s("p",[t._v("全局安装 TypeScript 开发环境：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install typescript -g # 安装命令\n$ tsc --version # 查看版本\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("常规查看 TypeScript 代码的运行效果的两个步骤：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("通过  "),s("code",[t._v("tsc")]),t._v("  编译 TypeScript 到 JavaScript 代码；")])]),t._v(" "),s("li",[s("p",[t._v("在浏览器或者 Node 环境下运行 JavaScript 代码。")])])]),t._v(" "),s("p",[t._v("简化 TypeScript 的运行：")]),t._v(" "),s("ul",[s("li",[t._v("编写了 TypeScript 之后可以直接运行在浏览器上：通过 webpack，配置本地的 TypeScript 编译环境和开启一个本地服务，可以直接运行在浏览器上； "),s("strong",[t._v("codewhy")]),t._v(" "),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/wnL1l-ERjTDykWM76l4Ajw",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypeScript (二) 使用 Webpack 搭建环境 (qq.com)"),s("OutboundLink")],1),t._v("；")]),t._v(" "),s("li",[t._v("编写了 TypeScript 之后，直接通过 node 的命令来执行：通过 ts-node 库，为 TypeScript 的运行提供执行环境。")])]),t._v(" "),s("blockquote",[s("p",[t._v("安装 ts-node：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$  npm i ts-node -g\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("与 ts-node 需要依赖 tslib 和 @types/node 两个包：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("npm i tslib @types/node -g\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);